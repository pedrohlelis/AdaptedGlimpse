@using Glimpse.ViewModels;

@model BoardVM;
@{
    Layout = "_BasicLayout";
    ViewData["StylesheetUrl"] = "~/css/index.css";
    ViewData["Title"] = Model.Board.Name;
    Console.WriteLine(Model.Board.Name);

}
<br><br>

<div class="sideBar d-flex flex-column">
    <div class="top mb-5">
        <div class="logo">
            <img class="menuLogo" src="~/Icons/GlimpseLogo.svg" alt="">
            <span class="text-white">Glimpse</span>
        </div>
        <box-icon name="menu" color="white" id="side-menu-btn"></box-icon>
    </div>
    <div class="d-flex flex-column mb-3">
        <div class="sideBar-item">
            <a class="button-style-2 h-100" href="">
                <box-icon name='cog' color="white"></box-icon>
                <span class="SB-nav-item">Settings</span>
            </a>
            <span class="tooltip">Settings</span>
        </div>
        <div class="sideBar-item" >
            <a class="button-style-2 h-100" asp-action="MainProjects" asp-controller="Project">
                <box-icon name='briefcase-alt' color="white"></box-icon>
                <span class="SB-nav-item">Projects</span>
            </a>
            <span class="tooltip">Projects</span>
        </div>
        <div class="sideBar-item">
            <a class="button-style-2  h-100" asp-action="Logout" asp-controller="Account">
                <box-icon name='log-out' color="white"></box-icon>
                <span class="SB-nav-item">Logout</span>
            </a>
            <span class="tooltip">Logout</span>
        </div>
    </div>

    <div class="user">
        <a class="d-flex flex-fill" asp-action="Profile" asp-controller="User">
            <div class="user-img-border">
                <img class="user-img" src='@(Model.User.Picture ?? Url.Content("~/default-images/defaultUserPfP.png"))' alt="">
            </div>
            <div>
                <p class="bold">@Model.User.FirstName @Model.User.LastName</p>
                <p>@Model.User.UserName</p>
            </div>
        </a>
    </div>
</div>

<div class="memberSideMenu d-flex flex-column active">
    @foreach(User member in Model.Members)
    {
    <div class="memberDiv d-flex flex-fill">
        <div class="user-img-border">
                <img class="user-img" src='@(Model.User.Picture ?? Url.Content("~/default-images/defaultUserPfP.png"))' alt="">
            </div>
            <div>
                <p class="bold">@Model.User.FirstName @Model.User.LastName</p>
                <p>@Model.User.UserName</p>
            </div>
    </div>
    }
</div>


<section class="container board-menu-func d-flex justify-content-between">
    <div class="board-header">
        <p style="font-size: smaller; letter-spacing: 2px;">Seja bem-vindo!</p>
        <h1 class="fw-bold" style="letter-spacing: 2px;">@Model.Board.Name</h1>
    </div>
    <button class="button-create new-lane-btn mx-5" style="width: 200px;">Adicionar Raia</button>
    <div class="d-flex justify-content-center">
            <box-icon name='bell' color="white"></box-icon>
            <box-icon name='user-plus' type='solid' color="white" ></box-icon>
            <box-icon name="group" color="white" id="member-side-menu-btn"></box-icon>
    </div>
    @* <div class="row row-cols-2 align-content-center">
        <a class="col" href="">
            <img src="/Icons/Invite.svg" alt="">
        </a>
        <a class="col" href="">
            <img src="/Icons/Notification.svg" alt="">
        </a>
    </div> *@
</section>
<div class="main-content d-flex flex-column mx-auto">
    <br>
    <div class="d-flex mx-auto">
        <div class="board-main d-flex flex-row overflow-auto" style="max-width: 1200px;">
            @foreach (Lane lane in Model.Board.Lanes)
            {
                <div style="width: 300px;" class="lane mx-3" data-lane-id="@lane.Id">
                    <div class="d-flex align-content-center align-items-center px-1">
                        <p class="text-uppercase fw-bold fs-6">@lane.Name</p>
                        <p class="rounded-circle text-black bg-white">@lane.Cards.Count</p>
                    </div>
                    <hr>
                    <br>

                    <div class="col d-flex task-btn">
                        <a class="w-100 align-items-center add-card-link">
                            <button class="button-create add-card-button">
                                <div class="d-flex justify-content-center">
                                    <img class="px-1" src="/Icons/plusIcon.svg" alt="">  
                                    <p class="px-1 m-0">Nova Tarefa</p>
                                </div>
                            </button>
                        </a>
                    </div>
                    <br>

                    <form class="create-card-form" asp-action="CreateCard" asp-controller="Card" method="post" hidden>
                        <input name="name" class="w-100 py-3 border-3 border-primary text-white card-input" style="background-color: #1E1E1E; border-radius: 13px; outline: none;" placeholder="Nome do cartÃ£o" type="text">
                        <input name="laneId" value="@lane.Id" type="hidden">
                        <input name="id" value="@Model.Board.Id" type="hidden">
                    </form>

                    <div class="container">
                        @foreach (Card card in lane.Cards)
                        {
                            <div class="card-link row py-3 border-bottom border-3 border-primary" 
                                style="background-color: #1E1E1E; border-radius: 13px; cursor: pointer;"
                                data-id="@card.Id"
                                data-name="@card.Name"
                                data-description="@card.Description"
                                data-date="@card.Date">
                                <a class="text-white px-4 card-link" style="text-decoration: none; cursor: pointer;">@card.Name</a>
                            </div>
                            <br>
                        }
                    </div>
                </div>
            }
            <form class="create-lane-form" asp-action="CreateLane" asp-controller="Lane" method="post" hidden>
                <div style="width: 300px; height: 200px;" class="lane">
                    <div class="d-flex align-content-center align-items-center px-1">
                        <input name="name" class="text-white lane-input" placeholder="Nome da raia" type="text" autocomplete="off" style="outline: none;">
                        <input name="id" value="@Model.Board.Id" type="hidden">
                    </div>
                    <br>
                    <hr>
                </div>
            </form>
            
        </div>
        @* <div class="board-main d-flex flex-row-reverse overflow-auto">
            @foreach (Lane lane in Model.Board.Lanes)
            {
                <div class="lane ms-3" data-lane-id="@lane.Id">
                    <div class=" lane-top-info d-flex align-content-between">
                        <p>@lane.Name</p>
                        <p class="number-circle">@lane.Cards.Count</p>
                    </div>
                    <ul class="card-list">
                        @foreach (Card card in lane.Cards)
                        {
                            <li class="card" draggable="true">
                                <p>@card.Name</p>
                            </li>
                        }
                    </ul>
                    <br>
                    <div class="text-white">
                        <button class="new-lane-btn text-white" id="addCardButton">
                            <div class="d-flex justify-content-center align-content-center">
                                <img class="PlusIcon" src="~/Icons/plusIcon.svg">
                                <p class="me-auto mb-auto">Adicionar Tarefa</p>
                            </div>
                        </button>
                    </div>
                </div>
            }
        </div> *@
    </div>
</div>

    <!-- Modal -->
    @* <div class="modal fade" id="ConfirmDeleteModal" tabindex="-1" aria-labelledby="CardInfo" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="ConfirmDeleteModalLabel">Account Delete</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
            <div class="modal-body">
                <p>Are you sure you want to delete your account?</p>
                <p><strong>This action cannot be undone.</strong></p>
            </div>
            <form method="post" asp-action="DeleteProfile" id="form-delete" enctype="multipart/form-data">
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-danger" id="delete-submit">yes, delete</button>
                </div>
            </form>
            <form method="post" asp-action="DeleteProfile" id="form-delete" enctype="multipart/form-data">
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-danger" id="delete-submit">yes, delete</button>
                </div>
            </form>
        </div>
    </div> *@


@* <br><br><br>
<div class="container d-flex overflow-visible">
    <div class="board-main d-flex">
        @foreach (Lane lane in Model.Board.Lanes)
        {
            <div style="width: 300px;" class="lane" data-lane-id="@lane.Id">
                <div class="d-flex align-content-center align-items-center px-1">
                    <p class="text-uppercase fw-bold fs-6">@lane.Name</p>
                    <p class="rounded-circle text-black bg-white">@lane.Cards.Count</p>
                </div>
                <hr>
                <br>

                <div class="col d-flex task-btn">
                    <a class="w-100 align-items-center add-card-link">
                        <button class="button-create add-card-button">
                            <div class="d-flex justify-content-center">
                                <img class="px-1" src="/Icons/plusIcon.svg" alt="">  
                                <p class="px-1 m-0">Nova Tarefa</p>
                            </div>
                        </button>
                    </a>
                </div>
                <br>

                <form class="create-card-form" asp-action="CreateCard" asp-controller="Card" method="post" hidden>
                    <input name="name" class="w-100 py-3 border-3 border-primary text-white card-input" style="background-color: #1E1E1E; border-radius: 13px; outline: none;" placeholder="Nome do cartÃ£o" type="text">
                    <input name="laneId" value="@lane.Id" type="hidden">
                    <input name="id" value="@Model.Board.Id" type="hidden">
                </form>

                <div class="container">
                    @foreach (Card card in lane.Cards)
                    {
                        <div class="card-link row py-3 border-bottom border-3 border-primary" 
                            style="background-color: #1E1E1E; border-radius: 13px; cursor: pointer;"
                            data-id="@card.Id"
                            data-name="@card.Name"
                            data-description="@card.Description"
                            data-date="@card.Date">
                            <a class="text-white px-4 card-link" style="text-decoration: none; cursor: pointer;">@card.Name</a>
                        </div>
                        <br>
                    }
                </div>
            </div>
        }
        <form class="create-lane-form" asp-action="CreateLane" asp-controller="Lane" method="post" hidden>
            <div style="width: 300px; height: 200px;" class="lane">
                <div class="d-flex align-content-center align-items-center px-1">
                    <input name="name" class="text-white lane-input" placeholder="Nome da raia" type="text" autocomplete="off" style="outline: none;">
                    <input name="id" value="@Model.Board.Id" type="hidden">
                </div>
                <br>
                <hr>
            </div>
        </form>
        <button class="button-create new-lane-btn mx-5" style="width: 200px;">Adicionar Raia</button>
    </div>
</div> *@

<div id="overlay" class="overlay" hidden>
    <form id="edit-card-form" asp-action="EditCard" asp-controller="Card" method="post">
        <div id="overlay-content" class="overlay-content">
            
            <input type="hidden" name="cardId" id="cardId">
            <div class="d-flex overflow-auto">
                <input class="overflow-visible text-white fs-3" type="text" name="name" id="name" style="outline: none; background-color: #131313; border: none;">
            </div> 
            <div class="d-flex flex-column">
                <label for="description">Description:</label>
                <input type="text" name="description" id="description">
            </div>
            <div>
                <label for="date">Date:</label>
                <input type="date" name="date" id="date">
            </div>
            <input type="hidden" name="id" value="@Model.Board.Id">

            <button type="submit" id="save-button" class="button-save">Salvar</button>
        </div>
    </form>
</div>

<script src="https://unpkg.com/boxicons@2.1.4/dist/boxicons.js"></script>
@section Scripts {
    <script>
        
        //START of sidebar menu ---------------------------
        let memberSideMenuBtn = document.querySelector('#member-side-menu-btn')
        let memberSideMenu = document.querySelector('.memberSideMenu')
        let sideMenuBtn = document.querySelector('#side-menu-btn')
        let sideBar = document.querySelector(".sideBar")
        let mainContent = document.querySelector(".main-content")
        let memberDivs = document.querySelectorAll(".memberDiv")

        if (memberDivs.length === 0) {
        console.error('No memberDiv elements found');
        }

        memberSideMenuBtn.onclick = function () {
            memberDivs.forEach(function (div) {
                div.classList.toggle('d-none');
            })
            memberSideMenu.classList.toggle('active');
        };

        sideMenuBtn.onclick = function () {
            sideBar.classList.toggle('active')
            mainContent.classList.toggle('opacity-50')
        };
        //END of sidebar menu   ---------------------------

        document.addEventListener('DOMContentLoaded', function() {
            const overlay = document.getElementById('overlay');
            const overlayContent = document.getElementById('overlay-content');
            const editForm = document.getElementById('edit-card-form');
            const saveButton = document.getElementById('save-button');
            let isModified = false;

            // FunÃ§Ã£o para mostrar o overlay
            function showOverlay() {
                overlay.removeAttribute('hidden');
            }

            // FunÃ§Ã£o para esconder o overlay
            function hideOverlay() {
                overlay.setAttribute('hidden', true);
            }

            // Event listener para detectar mudanÃ§as nos inputs
            overlayContent.addEventListener('input', function() {
                isModified = true;
                saveButton.classList.add('button-save-modified');
            });

            // Event listener para o envio do formulÃ¡rio
            editForm.addEventListener('submit', function(event) {
                if (!isModified) {
                    event.preventDefault();
                    return false;
                }
            });

            // Event listener para mostrar o overlay quando um card Ã© clicado
            const cards = document.querySelectorAll('.card-link');
            cards.forEach(card => {
                card.addEventListener('click', function(event) {
                    const cardId = card.dataset.id;
                    const cardName = card.dataset.name;
                    const cardDescription = card.dataset.description;
                    const cardDate = card.dataset.date;

                    document.getElementById('cardId').value = cardId;
                    document.getElementById('name').value = cardName;
                    document.getElementById('description').value = cardDescription;
                    document.getElementById('date').value = cardDate;

                    showOverlay();
                });
            });

            // Event listener para esconder o overlay quando clicar fora dele
            overlay.addEventListener('click', function(event) {
                if (event.target === overlay || event.target.classList.contains('close-button')) {
                    hideOverlay();
                }
            });
        });


        const addCardButtons = document.querySelectorAll('.add-card-button');
        const cardForms = document.querySelectorAll('.create-card-form');
        const cardInputs = document.querySelectorAll('.card-input');

        addCardButtons.forEach((button, index) => {
            button.addEventListener('click', function() {
                cardForms[index].removeAttribute('hidden');
                cardInputs[index].focus();
            });
        });

        const addLaneButton = document.querySelector('.new-lane-btn');
        const laneForm = document.querySelector('.create-lane-form');
        const laneInput = document.querySelector('.lane-input');

        addLaneButton.addEventListener('click', function() {
            laneForm.removeAttribute('hidden');
            laneInput.focus();
        });

        cardInputs.forEach((input) => {
            input.setAttribute('autocomplete', 'off');
        });

        laneInput.setAttribute('autocomplete', 'off');

        document.addEventListener('click', function(event) {
            cardForms.forEach((form, index) => {
                if (!event.target.closest('.create-card-form') && !event.target.closest('.add-card-button')) {
                    form.setAttribute('hidden', true);
                }
            });

            if (!event.target.closest('.create-lane-form') && !event.target.closest('.new-lane-btn')) {
                laneForm.setAttribute('hidden', true);
            }
        });
    </script>
}

@* <style>
    input:focus {
        outline: none;
    }
    .create-lane-form input {
        background-color: #131313;
    }   
    .button-create {
        width: 100%;
        height: 4em;
        padding: 0.4em 1.2em;
        border: none;
        border-radius: 8px;
        letter-spacing: 1px;
        box-sizing: border-box;
        transition: all 500ms;
        justify-content: center;
        white-space: nowrap;
        position: relative;
        overflow: hidden;
        text-transform: uppercase;
        background-color: #272727;
        color: white;
    }
    .overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        backdrop-filter: blur(8px);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
    }

    .overlay-content {
        margin-top: 10%;
        width: 800px;
        height: 600px;
        background-color: #131313;
        border-radius: 10px;
        padding: 30px;
        box-shadow: 0px 0px 40px 0px rgba(255, 255, 255, 0.103);
    }
    .button-save-modified {
        background-color: purple;
        color: white;
    }
</style> *@