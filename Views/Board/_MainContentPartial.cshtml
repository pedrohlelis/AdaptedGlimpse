@using Glimpse.ViewModels;
@model BoardVM;


<div class="board container">

    <input name="IsMemberSideBarActive" type="hidden">

    <div class="lanes text-white" style="max-width: 1250px; max-height: 800px;">
        <div>
            <button id="add-lane-button" class="button-create new-lane-btn mx-5" style="width: 200px;">
                Adicionar Raia
            </button>
            <form id="create-lane-form" class="create-lane-form" asp-action="CreateLane" asp-controller="Lane" method="post" hidden>
                <div style="width: 300px; height: 200px;" class="lane">
                    <div class="d-flex align-content-center align-items-center px-1">
                        <input name="name" class="text-white lane-input" placeholder="Nome da raia" type="text" autocomplete="off" style="outline: none;">
                        <input name="id" value="@Model.Board.Id" type="hidden">
                    </div>
                    <br>
                    <hr>
                </div>
            </form>
        </div>
        
        @foreach (Lane lane in Model.Board.Lanes.OrderBy(lane => lane.Index))
        {
            <div class="swim-lane col mx-3 overflow-y bg-dark" style="min-width: 250px; max-height: 600px;" data-id="@lane.Id" draggable="true">
                <div class="d-flex  px-1">
                    <p class="text-uppercase fw-bold fs-6">@lane.Name <span class="badge bg-secondary text-black">@lane.Cards.Count</span></p>
                </div>
                <hr>
                <br>

                <div class="col d-flex task-btn">
                    <a class="w-100 align-items-center add-card-link">
                        <button class="button-create add-card-button">
                            <div class="d-flex justify-content-center">
                                <img class="px-1" src="/Icons/plusIcon.svg" alt="">  
                                <p class="px-1 m-0">Nova Tarefa</p>
                            </div>
                        </button>
                    </a>
                </div>
                <br>

                <form class="create-card-form" asp-action="CreateCard" asp-controller="Card" method="post" hidden>
                    <input name="name" class="w-100 py-3 border-3 border-primary text-white card-input" style="background-color: #1E1E1E; border-radius: 13px; outline: none;" placeholder="Nome do cartÃ£o" type="text">
                    <input name="laneId" value="@lane.Id" type="hidden">
                    <input name="id" value="@Model.Board.Id" type="hidden">
                    <input name="IsMemberSideBarActive" type="hidden">
                </form>

                <form class="save-card-order-form" asp-action="SaveCardOrder" asp-controller="Card" method="post" hidden>
                    <input type="text" name="taskIndexDictionary">
                    <input name="id" value="@Model.Board.Id" type="hidden">
                    <input name="IsMemberSideBarActive" type="hidden">
                </form>

                <form class="save-lane-order-form" asp-action="SaveLaneOrder" asp-controller="Lane" method="post" hidden>
                    <input type="text" name="laneIndexDictionary">
                    <input name="id" value="@Model.Board.Id" type="hidden">
                    <input name="IsMemberSideBarActive" type="hidden">
                </form>

                @foreach (Card card in lane.Cards.OrderBy(card => card.Index))
                {
                    <div class="task row py-3 border-bottom border-3 border-primary" 
                        style="background-color: #1E1E1E; border-radius: 13px; cursor: pointer;"
                        data-id="@card.Id"
                        data-name="@card.Name"
                        data-description="@card.Description"
                        data-date="@card.Date"
                        draggable="true">
                        <a class="text-white px-4 card-link" style="text-decoration: none; cursor: pointer;">@card.Name</a>
                    </div>
                    <br>
                }
            </div>
        }
    </div>
</div>


<style>
    .board {
    width: 100%;
    height: 100%;
    }

    /* ---- BOARD ---- */
    .lanes {
    display: flex;
    align-items: flex-start;
    justify-content: start;
    gap: 16px;
    padding: 24px 32px;
    height: 100%;
    overflow-y: auto;
    }

    .swim-lane {
    display: flex;
    flex-direction: column;
    gap: 12px;
    background: #272727;
    box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.25);
    padding: 12px;
    border-radius: 4px;
    width: 225px;
    min-height: 120px;
    overflow-x: auto;
    }

    .task {
    background: white;
    color: black;
    box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.15);
    border-radius: 4px;
    font-size: 16px;
    cursor: move;
    }

    .is-dragging {
    scale: 1.05;
    box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.25);
    background: rgb(50, 50, 50);
    color: white;
    }

    .is-dragging-lane {
        transform: scale(1.05) rotate(-5deg);
        box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.25);
        background: rgb(50, 50, 50);
        color: white;
        transition: transform 0.2s ease;
    }
</style>